---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";
import StorySection from "../components/StorySection.astro";
import WhoIs from "../components/WhoIs.astro";
import Footer from "../components/Footer.astro";


import ResourcesSection from "../components/ResourcesSection.astro";
import AboutSection from "../components/AboutSection.astro";
import { CA, tg, dex, x, ig, tiktok, buynow } from "../utils/utils";
---

<Layout
	title="Super Nigga"
	description="The official Super Nigga cryptocurrency"
	keywords="Super Nigga, crypto, fungible token, cryptocurrency, solana"
	canonicalURL=""
	robots="index, follow"
>
  <!-- Main Container with Smooth Scroll -->
  <main class="scroll-container">
    <!-- Hero Section -->
    <section id="hero" class="section-slide">
      <Hero />
    </section>

    <!-- Who Is Super Nigga Section -->
    <WhoIs />

    <!-- Story Section -->
    <StorySection />

    <Footer />

    <!-- Resources Section -->
    <!-- <ResourcesSection /> -->

    <!-- About Section -->
    <!-- <AboutSection /> -->
  </main>

  <!-- Navigation Dots -->
  <nav id="section-nav" class="fixed right-8 top-1/2 transform -translate-y-1/2 z-50 space-y-4">
    <button class="nav-dot active" data-target="hero" aria-label="Go to Hero section">
      <span class="sr-only">Hero</span>
    </button>
    <button class="nav-dot" data-target="story" aria-label="Go to Story section">
      <span class="sr-only">Story</span>
    </button>
    <button class="nav-dot" data-target="resources" aria-label="Go to Resources section">
      <span class="sr-only">Resources</span>
    </button>
    <button class="nav-dot" data-target="about" aria-label="Go to About section">
      <span class="sr-only">About</span>
    </button>
  </nav>
</Layout>

<style>
  /* Smooth scroll container */
  .scroll-container {
    scroll-behavior: smooth;
    scroll-snap-type: y proximity;
    height: 100vh;
    overflow-y: scroll;
  }
  
  .section-slide {
    scroll-snap-align: start;
    min-height: 100vh;
  }
  
  /* Navigation dots */
  .nav-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.5);
    background: transparent;
    transition: all 0.3s ease;
    cursor: pointer;
    position: relative;
  }
  
  .nav-dot:hover {
    border-color: rgba(255, 255, 255, 0.8);
    transform: scale(1.2);
  }
  
  .nav-dot.active {
    background: white;
    border-color: white;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  }
  
  .nav-dot::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .nav-dot:hover::after {
    opacity: 1;
  }
  
  /* Hide navigation on mobile */
  @media (max-width: 768px) {
    #section-nav {
      display: none;
    }
  }
  
  /* Screen reader only */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const navDots = document.querySelectorAll('.nav-dot') as NodeListOf<HTMLButtonElement>;
    const sections = document.querySelectorAll('.section-slide, section[id]') as NodeListOf<HTMLElement>;
    const scrollContainer = document.querySelector('.scroll-container') as HTMLElement;
    
    // Navigation dot click handlers
    navDots.forEach(dot => {
      dot.addEventListener('click', () => {
        const targetId = dot.getAttribute('data-target');
        const targetSection = document.getElementById(targetId!);
        
        if (targetSection) {
          targetSection.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
    
    // Update active dot based on scroll position
    const updateActiveDot = () => {
      const scrollTop = scrollContainer ? scrollContainer.scrollTop : window.pageYOffset;
      const windowHeight = window.innerHeight;
      
      let activeSection: HTMLElement | null = null;
      let minDistance = Infinity;
      
      sections.forEach(section => {
        const rect = section.getBoundingClientRect();
        const sectionTop = rect.top + scrollTop;
        const distance = Math.abs(scrollTop - sectionTop);
        
        if (distance < minDistance && rect.top <= windowHeight / 2) {
          minDistance = distance;
          activeSection = section;
        }
      });
      
      if (activeSection) {
        const activeId = activeSection.id;
        navDots.forEach(dot => {
          dot.classList.toggle('active', dot.getAttribute('data-target') === activeId);
        });
      }
    };
    
    // Listen for scroll events
    const scrollListener = scrollContainer || window;
    scrollListener.addEventListener('scroll', updateActiveDot, { passive: true });
    
    // Initial update
    updateActiveDot();
    
    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {
        e.preventDefault();
        const currentActive = document.querySelector('.nav-dot.active') as HTMLButtonElement;
        const currentIndex = Array.from(navDots).indexOf(currentActive);
        
        let nextIndex;
        if (e.key === 'ArrowDown') {
          nextIndex = Math.min(currentIndex + 1, navDots.length - 1);
        } else {
          nextIndex = Math.max(currentIndex - 1, 0);
        }
        
        navDots[nextIndex].click();
      }
    });
  });
</script>